* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-image: linear-gradient(to bottom right, #111E25 0%, #111 100%);  
  -webkit-font-smoothing: antialiased;
  opacity: 0;
  transition: 4000ms opacity;
}
.container {
  position: relative;
  width: 500px;
  max-width: 100%;
  border-radius: 0px;
  padding: 40px;
  text-align: center;
  background-image: linear-gradient(to bottom right, #111 0%, #111E25 100%);  
}
.container h1 {
  font-family: 'Sofia';
  font-size: 2.5em;
  color: #5c86ff;
  line-height: 1;
  margin: 20px 0;
}
.container p {
  font-size: 1.1em;
  font-weight: 600;
  font-style: italic;
  margin: 20px 0;
  color: #ff3c7b;
}
.container .dates {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 50px;
  padding: 10px;
}
.dates input {
  width: 100%;
  padding: 15px 10px;
  font-size: 2em;
  text-align: center;
  font-weight: 700;
  border: none;
  color: #fff;
  background: linear-gradient(to right, #fff, #ff3c7b, #fff) no-repeat;
  background-size: 100% 2px;
  background-position: center top;
  transition: .3s ease-out;
}
input:active,
input:focus,
input:valid {
    border: none;
    outline: none;
    background-position: center bottom;
}
input::placeholder {
    color: rgba(255, 255, 255, 0.4);
    font-size: .6em;
  transition: .3s ease-out;
  font-weight: 500;
  font-family: 'Sofia';
  font-style: oblique;
}
input:active::placeholder,
input:focus::placeholder,
input:valid::placeholder {
    opacity: 0;
}
::-webkit-inner-spin-button {
  appearance: none;
}

.output {
  transition: 0.5s ease-out;
  margin-top: 30px;
  font-size: 1.2em;
  color: white;
}
.animate {
  font-style: italic;
  animation: zoomOutput 2s ease-out;
  animation-iteration-count: 2;
}

@keyframes zoomOutput {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes loading {
  0% {
    cy: 10;
  }
  25% {
    cy: 3;
  }
  50% {
    cy: 10;
  }
}

canvas {
  height: 70vh;
  pointer-events: none;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  z-index: 2;
  /* border: 3px solid red; */
}

button {
  background: none;
  border: none;
  color: #f4f7ff;
  cursor: pointer;
  font-family: "Quicksand", sans-serif;
  font-size: 14px;
  font-weight: 500;
  height: 40px;
  left: 0%;
  outline: none;
  overflow: hidden;
  padding: 0 10px;
  position: relative;
  top: 100%;
  transform: translate(0%, 30%);
  width: 150px;
  -webkit-tap-highlight-color: transparent;
  z-index: 1;
}
button::before {
  background: #1f2335;
  border-radius: 50px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4) inset;
  content: "";
  display: block;
  height: 100%;
  margin: 0 auto;
  position: relative;
  transition: width 0.2s cubic-bezier(0.39, 1.86, 0.64, 1) 0.3s;
  width: 100%;
}

button.ready .submitMessage svg {
  opacity: 1;
  top: 1px;
  transition: top 0.4s ease 600ms, opacity 0.3s linear 600ms;
}
button.ready .submitMessage .button-text span {
  top: 0;
  opacity: 1;
  transition: all 0.2s ease calc(var(--dr) + 600ms);
}

button.loading::before {
  transition: width 0.3s ease;
  width: 80%;
}
button.loading .loadingMessage {
  opacity: 1;
}
button.loading .loadingCircle {
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-name: loading;
  cy: 10;
}

button.complete .submitMessage svg {
  top: -30px;
  transition: none;
}
button.complete .submitMessage .button-text span {
  top: -8px;
  transition: none;
}
button.complete .loadingMessage {
  top: 80px;
}
button.complete .successMessage .button-text span {
  left: 0;
  opacity: 1;
  transition: all 0.2s ease calc(var(--d) + 1000ms);
}
button.complete .successMessage svg {
  stroke-dashoffset: 0;
  transition: stroke-dashoffset 0.3s ease-in-out 1.4s;
}

.button-text span {
  opacity: 0;
  position: relative;
}

.message {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
}

.message svg {
  display: inline-block;
  fill: none;
  margin-right: 5px;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2;
}

.submitMessage .button-text span {
  top: 8px;
  transition: all 0.2s ease var(--d);
}
.submitMessage svg {
  color: #5c86ff;
  margin-left: -1px;
  opacity: 0;
  position: relative;
  top: 30px;
  transition: top 0.4s ease, opacity 0.3s linear;
  width: 14px;
}

.loadingMessage {
  opacity: 0;
  transition: opacity 0.3s linear 0.3s,
    top 0.4s cubic-bezier(0.22, 0, 0.41, -0.57);
}
.loadingMessage svg {
  fill: #5c86ff;
  margin: 0;
  width: 22px;
}

.successMessage .button-text span {
  left: 5px;
  transition: all 0.2s ease var(--dr);
}
.successMessage svg {
  color: #5cffa1;
  stroke-dasharray: 20;
  stroke-dashoffset: 20;
  transition: stroke-dashoffset 0.3s ease-in-out;
  width: 14px;
}

.loadingCircle:nth-child(2) {
  animation-delay: 0.1s;
}

.loadingCircle:nth-child(3) {
  animation-delay: 0.2s;
}

.card {
    position: relative;
    width: fit-content;
    max-width: 95%;
    height: 100%;
    background: royalblue;
    transition: 0.5s;
    border-radius: 0px;
    overflow: hidden;
    padding: 5px;
}
.card .lines {
    position: absolute;
    inset: 0;
    background: #000;
    overflow: hidden;
}
.card .lines::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 800px;
    height: 120px;
    background: linear-gradient(transparent, #ff3c7b, #ff3c7b, #ff3c7b, transparent);
    animation: animate 4s linear infinite;
    animation-play-state: running;
}
@keyframes animate {
    0% {
        transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
        transform: translate(-50%, -50%) rotate(360deg);
    }
}
.card .lines::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 800px;
    height: 120px;
    background: linear-gradient(transparent, #ff3c7b, #ff3c7b, #ff3c7b, transparent);
    animation: animateTwo 4s linear infinite;
    animation-play-state: running;
}
@keyframes animateTwo {
  0% {
      transform: translate(-50%, -50%) rotate(360deg);
  }
  100% {
      transform: translate(-50%, -50%) rotate(0deg);
  }
}
@media screen and (max-width: 500px) {
    .container {
        padding: 40px 10px;
    }
    .container .dates {
        gap: 10px;
    }
    .dates input {
        padding: 10px 0;
    }
}